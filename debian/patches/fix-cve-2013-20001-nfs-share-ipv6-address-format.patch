Author: Felix DÃ¶rre <felix@dogcraft.de>
Description: libshare: nfs: pass through ipv6 addresses in bracket notation
 Recognize when the host part of a sharenfs attribute is an ipv6
 Literal and pass that through without modification.
 Note: modification to tests in upstream commit is not included.
Forwarded: not-needed
Bug: https://github.com/openzfs/zfs/issues/11171
Origin: https://github.com/openzfs/zfs/commit/6cb5e1e7591da20af3a15793e022345a73e40fb7
Last-Update: 2023-12-04

Index: zfs-linux/lib/libshare/os/linux/nfs.c
===================================================================
--- zfs-linux.orig/lib/libshare/os/linux/nfs.c
+++ zfs-linux/lib/libshare/os/linux/nfs.c
@@ -180,8 +180,9 @@ foreach_nfs_host_cb(const char *opt, const char *value, void *pcookie)
 {
 	int error;
 	const char *access;
-	char *host_dup, *host, *next;
+	char *host_dup, *host, *next, *v6Literal;
 	nfs_host_cookie_t *udata = (nfs_host_cookie_t *)pcookie;
+	int cidr_len;
 
 #ifdef DEBUG
 	fprintf(stderr, "foreach_nfs_host_cb: key=%s, value=%s\n", opt, value);
@@ -204,10 +205,46 @@ foreach_nfs_host_cb(const char *opt, const char *value, void *pcookie)
 		host = host_dup;
 
 		do {
-			next = strchr(host, ':');
-			if (next != NULL) {
-				*next = '\0';
-				next++;
+			if (*host == '[') {
+				host++;
+				v6Literal = strchr(host, ']');
+				if (v6Literal == NULL) {
+					free(host_dup);
+					return (SA_SYNTAX_ERR);
+				}
+				if (v6Literal[1] == '\0') {
+					*v6Literal = '\0';
+					next = NULL;
+				} else if (v6Literal[1] == '/') {
+					next = strchr(v6Literal + 2, ':');
+					if (next == NULL) {
+						cidr_len =
+						    strlen(v6Literal + 1);
+						memmove(v6Literal,
+						    v6Literal + 1,
+						    cidr_len);
+						v6Literal[cidr_len] = '\0';
+					} else {
+						cidr_len = next - v6Literal - 1;
+						memmove(v6Literal,
+						    v6Literal + 1,
+						    cidr_len);
+						v6Literal[cidr_len] = '\0';
+						next++;
+					}
+				} else if (v6Literal[1] == ':') {
+					*v6Literal = '\0';
+					next = v6Literal + 2;
+				} else {
+					free(host_dup);
+					return (SA_SYNTAX_ERR);
+				}
+			} else {
+				next = strchr(host, ':');
+				if (next != NULL) {
+					*next = '\0';
+					next++;
+				}
 			}
 
 			error = udata->callback(udata->filename,
Index: zfs-linux/man/man8/zfs.8
===================================================================
--- zfs-linux.orig/man/man8/zfs.8
+++ zfs-linux/man/man8/zfs.8
@@ -545,7 +545,7 @@ access for a set of IP addresses and to enable root access for system
 on the
 .Ar tank/home
 file system:
-.Dl # Nm zfs Cm set Sy sharenfs Ns = Ns ' Ns Ar rw Ns =@123.123.0.0/16,root= Ns Ar neo Ns ' tank/home
+.Dl # Nm zfs Cm set Sy sharenfs Ns = Ns ' Ns Ar rw Ns =@123.123.0.0/16:[::1],root= Ns Ar neo Ns ' tank/home
 .Pp
 If you are using DNS for host name resolution,
 specify the fully-qualified hostname.
